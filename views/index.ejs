<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="../styles/css/stylesTemplates.css" />
    <script src="/socket.io/socket.io.js"></script>
    <title>Desaf√≠o EJS</title>
  </head>
  <body>
    <section class="formSection">
      <h1>Lista de productos</h1>
      <form onsubmit="addProduct(this)">
        <label for="Producto"
          >Producto
          <input
            type="text"
            id="inputTitle"
            name="title"
            placeholder="Example"
            required
          />
        </label>
        <label for="Precio"
          >Precio
          <input
            type="number"
            id="inputPrice"
            name="price"
            placeholder="$####"
            required
          />
        </label>
        <label for="Miniatura"
          >Imagen
          <input
            type="text"
            id="inputThumbnail"
            name="thumbnail"
            placeholder="https://www.example.com/img"
            required
          />
        </label>
        <button type="submit">Cargar producto</button>
      </form>
    <section class="prodList">
      <table id="prodTable">
        <thead>
          <tr>
            <th>Producto</th>
            <th>Imagen</th>
            <th>Precio</th>
          </tr>
        </thead>
        <tbody id="tBody">
          <%- include("./partials/prodList"); %>
        </tbody>
      </table>
    </section>
    <section class="chatSection">
      <h1>Deje su mensaje</h1>
      <div>
        <form onsubmit="addMessage(this)">
          <label for="e-mail">
            <input type="email" id="inputEmail" required />
          </label>
          <label for="Mensaje">
            <input type="message" id="inputMessage" required />
          </label>
          <button type="submit" id="btnSend">Enviar Mensaje</button>
        </form>
      </div>
      <h1>Historial de mensajes</h1>
      <div id="chatBox">
      </div>
    </section>
    <div>
      <button><a href="/">Volver</a></button>
    </div>
    <script>
      const socket = io();
      //Productos
      const inputTitle = document.getElementById("inputTitle");
      const inputPrice = document.getElementById("inputPrice");
      const inputThumbnail = document.getElementById("inputThumbnail");
      const tBody = document.getElementById("tBody");

      const addProduct = e => {
        const prod = {
          title: inputTitle.value,
          price: inputPrice.value,
          thumbnail: inputThumbnail.value
        }
        socket.emit("newProd", prod);
        return false;
      }

      const renderProdTable = data => {
        tBody.innerHTML = "";
        const tr = data
        .map((prod) => {
          return(`<tr class="prod">
            <td><p class="title">${prod.title}</p></td>
            <td>
              <img
                src="${prod.thumbnail}"
                alt="${prod.title} img"
                style="max-height: 150px"
              />
            </td>
            <td><p class="price">$${prod.price}</p></td>
          </tr>`)}).join("")
          tBody.innerHTML = tr;
      }

      socket.on("requestProducts", data => {renderProdTable(data)})

      //Chat
      const email = document.getElementById("inputEmail");
      const message = document.getElementById("inputMessage");
      const chatBox = document.getElementById("chatBox");

      const addMessage = e => {
        const messageInfo = {
          userEmail: email.value,
          message: message.value,
          time: new Date()
        }
        socket.emit("newMessage", messageInfo);
        return false
      }

      const renderChat = (data) => {
        console.log(data)
        chatBox.innerHTML = "";
          const chat = data
            .map((message) => { 
              return(
                `<div>
                  <strong>${message.userEmail} ha dejado un mesaje</strong>: 
                  <em>${message.message} a las ${message.time}</em>
                </div>`
            )}).join(" ")
            chatBox.innerHTML = chat;
          }

      socket.on("requestChat", data => {renderChat(data)})

    </script>
  </body>
</html>
